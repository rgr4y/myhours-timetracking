name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # Clone the repository to install dependencies
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install main dependencies
        run: npm ci

      - name: Install renderer dependencies
        run: |
          cd src/renderer
          npm install

      - name: Generate Prisma client
        run: npm run prisma:generate

      - name: Prepare development database
        run: node scripts/prepare-db.js

      - name: Create .env file for development
        run: |
          echo "NODE_ENV=development" > .env
          echo "ELECTRON_ENABLE_LOGGING=true" >> .env
          echo "ELECTRON_ENABLE_STACK_DUMPING=true" >> .env

      - name: Verify setup
        run: |
          echo "✅ Node.js version: $(node --version)"
          echo "✅ NPM version: $(npm --version)"
          echo "✅ Main dependencies installed"
          echo "✅ Renderer dependencies installed"
          echo "✅ Prisma client generated"
          echo "✅ Development database prepared"
          echo "✅ Environment configured"
